#!/usr/bin/python3

# MODIFIED VERSION OF oliverscheer/send-email-with-device-ip-address
import socket
import smtplib
import os
import sys
import requests 


def get_device_ip_address(): #directly from olivescheer 

    try: 
        if os.name == "nt":
            # On Windows
            result = "Running on Windows"
            hostname = socket.gethostname()
            result += "\nHostname:  " + hostname
            host = socket.gethostbyname(hostname)
            result += "\nHost-IP-Address:" + host
            return result

        elif os.name == "posix":
            gw = os.popen("ip -4 route show default").read().split()
            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            s.connect((gw[2], 0))
            ipaddr = s.getsockname()[0]
            gateway = gw[2]
            host = socket.gethostname()
            result = "IP:\t\t" + ipaddr + "\nGateway:\t" + gateway #this line was modified to take out hostname data and os 
            return result
        
        else:
            result = os.name + " not supported yet."
            return result
    except:
        return "Could not detect ip address" 
#modifications start here 
def send_notification(text):
    try:
      requests.post('https://maker.ifttt.com/trigger/EVENT/with/key/YOUR_KEY_HERE', params={"value1": "DEVICE CONNECTED:" ,"value2": message,"value3":"none"})  
#Places event onto IFTT webhooks (Replace Event with name of event and your key here with key)
    except:
        print("failed to send notification to webhooks") #notifies user of post failure

message = get_device_ip_address() #runs get ip definition 
print(message) #prints message in terminal 
print("Sending notification, can take a while.") #notifies user that send process is starting 
send_notification(message) #sends notification 
print("Done.") #notifies of completion 


sys.exit()
